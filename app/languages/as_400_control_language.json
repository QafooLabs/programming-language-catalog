{"name":"CL","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/AS\/400_Control_Language","description":["The AS\/400 Control Language (CL) is a scripting language for the IBM AS\/400 midrange platform bearing a resemblance to the IBM Job Control Language and consisting of an ever expanding set of command objects (*CMD) used to invoke traditional AS\/400 programs and\/or get help on what those programs do. CL can also be used to create CL programs (congruent to shell scripts) where there are additional commands that provide program-like functionality (GOTO, IF\/ELSE, variable declaration, file input, etc.)","The vast majority of AS\/400 commands were written by IBM developers to perform system level tasks like compiling programs, backing up data, changing system configurations, displaying system object details, or deleting them. Commands are not limited to systems level concerns and can be drafted for user applications as well.","Parameters (command-line arguments) defined in the main procedures of all traditional AS\/400 programs are hard coded lists that are made up of parameters that can be numeric, alphanumeric, boolean, etc. and the order in which parameters are passed is important. This is a stark difference from the Unix and DOS worlds where the parameter list in Unix shell scripts and C programs is a set or array of character pointers and more often than not the parameters are not positionally dependent.","The AS\/400 developer's solution to this problem was the command object (*CMD). While the parameters on the command can be specified in any order, each parameter is defined to be passed in a specific order to the program. The programmer can also define, among other things, the parameter's data type, unique parameter name, descriptive text (for prompting), default value (used only if the parameter isn't specified during execution), if the values are restricted to a certain set or range, if the data entered should be changed to another value before calling the program, etc.","At its most basic a command names a single program to call when the user types or prompts the command and presses the Enter key. The command takes all of the parameters typed by the user, and those not typed by the user, and builds a parameter list that it passes to the program when it's called.","The BNF for a much simplified CL command syntax would be defined as follows:","The items above that end in -name follow AS\/400 object naming conventions which, generally speaking, means the name starts with a letter and can be up to ten characters in length. (CL commands are also case-insensitive.)","A good example of a typical CL command is the Change Program (CHGPGM) command below:","CHGPGM MYPGM OPTIMIZE(*FULL) RMVOBS(*BLKORD *PRCORD) TEXT('My program.')","The above command is passing four parameters to the program that does Change Program processing and they are:","In reality the AS\/400 will pass many more parameters than the four specified above. This is because the rest of the CHGPGM command's parameters were not specified, so default values will be passed instead. For every parameter on this, aside from the PGM parameter, that default is *SAME, meaning don't change it.","All AS\/400 commands can be prompted directly from the command line or within CL program source by typing the command and pressing the F4 function key. An OS\/400 command can also be prompted by typing a\u00a0? before the command. (This is useful in an interactive program which cues a command string, having already filled in some values.)","The system will then present a screen with the set of parameters that the program accepts\/requires (required parameters are usually highlighted).","Required parameters are listed first, and parameters with system-supplied default values are listed last of all. To see all parameters, press F10. If any one choice requires further selections, those are cued as you select that value for that parameter, by appearing onscreen.","Prompting is further enhanced to allow the programmer to find what values are valid for each parameter. To do this during prompting the user would move the cursor to the parameter field in question and press F4 again. The system would then display a screen describing the type of input required and an available list of allowable values.","To enter a longer name, or extend the list to allow you to enter extra values, type a plus sign instead of a value. (As when listing names of objects to be saved or restored.)","Cursor sensitive help can also be provided on AS\/400 commands but it's not required. If help has been provided one can view help for a parameter by moving the cursor to the desired parameter field and pressing F1 (help). To get help for the entire command itself (and all of its parameters) the user would press F1 anywhere on the prompt display and then press F2 (extended help).","New commands can be created to call non-system programs and they will work exactly like the AS\/400 variety. The Command Definition Language is described in the CL Programmer's Guide.","It's a good idea to create help screens for new commands and their parameters. All help screens use Panel Group objects (*PNLGRP) and these can be created using the UIM language described in the IBM AS\/400 Application Display Programming manual.","Beginning in V5R3 of the operating system a new, much simpler method of creating help was added: run the command","A skeleton UIM panel group will be automatically generated including all parameters described by the command. The result file can be edited (seu, wdsc, rdi), then compiled with the CRTPNLGRP command, and finally associated with the command via CHGCMD HLPPNLGRP().","There are 2,161 commands built-in IBM commands contained in V6R1, but finding them isn't all that hard because of several designs of the system that make life easier. These labor saving designs are: Standardized Abbreviations, Command Grouping Menus, and Command Selection.","The AS\/400 developers standardized the abbreviations used to create command names. Verbs like change are always rendered as CHG, display as DSP, work as WRK, create as CRT, etc. Subjects like program are always PGM, user is USR, module is MOD, server is SVR, etc. You can see every possible verb and subject used on the AS\/400 in the VERB and SUBJECT menus, just enter the commands GO VERB or GO SUBJECT.","The VERB and SUBJECT menus are part of what are called the Command Grouping Menus. For every Three (or four) Letter abbreviation there is a menu devoted to it that starts with the letters CMD. So to see all CHG commands the user would execute the command GO CMDCHG. For program commands the menu would be CMDPGM.","There are other menus besides the Command Grouping Menus. The starting point for the menuing system can be accessed by pressing F4 on an empty command line.","If one only knows part of a command or if third party software is being used where the commands don't conform to the AS\/400 abbreviation standard then you would enter that part of the command that is known, attach an asterisk (to make it generic), and press enter. The system will then display a list of commands in the job's library list that match the generic names just typed. One can then page through the list looking for the command needed and then select it using option 1.","In the background the system is using the SLTCMD command to perform this function. If one wants to select all commands in a library then prompt this command and enter the special value *ALL.","The following is a sample of CL programming. The program interactively converts dates from julian to mdy and vice versa. Results are displayed on line 24 of the terminal. It accepts two parameters. The &IN parameter which is the date string to be converted. If a julian string it should be in the format yynnn where yy is the year number and nnn is the day number of the year. If a MDY string it must be in the format mmddyy. The second parameter is &TYP which is the type of date to be converted to. It must be 'J' (julian) or 'M' (mdy). For example: the command CALL PGM(ICVTDATC) PARM('04180' 'M') will convert the julian date 04180 to 062804 (June 28, 2004)."]}