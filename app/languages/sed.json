{"name":"Sed","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Sed","description":["sed (stream editor) is a Unix utility that parses text and implements a programming language which can apply transformations to such text. It reads input line by line (sequentially), applying the operation which has been specified via the command line (or a sed script), and then outputs the line. It was developed from 1973 to 1974 as a Unix utility by Lee E. McMahon of Bell Labs, and is available today for most operating systems.","sed is one of the very early Unix commands built for command line processing of data files. It evolved as the natural successor to the popular grep command. Cousin to the later AWK, sed allows powerful and interesting data processing to be done by shell scripts.","sed and AWK are often cited as the progenitors and inspiration for Perl. The s \/ \/ \/ syntax shown below is part of Perl's syntax and originated with ed, the precursor to sed.","sed's language does not have variables and has only primitive GOTO and branching functionality; nevertheless, the language is Turing-complete.","GNU sed added several new features. The best-known is in-place editing of files (i.e., replace the original file with the result of applying the sed program), which was later included in BSD sed too. This feature is nowadays often used instead of ed scripts: for example,","Note: \"sed -i\" overwrites the original file with a new one, breaking any links the original may have had, while the above example using \"ed\" changes only the original file's contents, preserving file links. Note that if using -i'extension' the original file will be preserved by renaming it with the given extension. Note also that a space cannot be used between \"-i\" and extension since the extension is optional.","Super-sed is an extended version of sed that includes regular expressions compatible with Perl.","Another variant of sed is minised, originally reverse-engineered from the 4.1BSD sed by Eric S. Raymond and currently maintained by Ren\u00e9 Rebe. minised was used by the GNU Project until the GNU Project wrote a new version of sed based on the new GNU regular expression library. The current minised contains some extensions to BSD sed but is not as feature-rich as GNU sed. Its advantage is that it is very fast and uses little memory.[citation needed] It is used on embedded systems and is the version of sed provided with Minix.[citation needed]","The following example shows a typical, and the most common, use of sed, where the -e option indicates that the sed expression follows:","In many versions, the -e is not required to precede the expression. The s stands for substitute. The g stands for global, which means that all matching occurrences in the line would be replaced. The regular expression (i.e. pattern) to be searched is placed after the first delimiting symbol (slash here) and the replacement follows the second symbol. Slash is the conventional symbol. Any other could be used to make syntax more readable if it does not occur in the pattern or replacement (see below), which is useful to avoid leaning toothpick syndrome.","Under Unix, sed is often used as a filter in a pipeline:","That is, generate the data, and then make the small change of replacing x with y.","Several substitutions or other commands can be put together in a file called, for example, subst.sed and then be applied using the -f option to read the commands (such as s\/x\/y\/g) from the file:","Besides substitution, other forms of simple processing are possible. For example, the following uses the d command to delete lines that are either blank or only contain spaces:","This example used some of the following regular expression metacharacters:","Complex sed constructs are possible, allowing it to serve as a simple, but highly specialised, programming language. Flow of control, for example, can be managed by the use of a label (a colon followed by a string) and the branch instruction b. An instruction b followed by a valid label name will move processing to the block following that label. If the label does not exist then the branch will end the script.","To delete any line containing the word \"yourword\" from the file \"yourfile\":","To delete all instances of the word \"yourword\":","To delete two words from a file simultaneously:","or","In the next example, sed, which usually only works on one line, removes newlines from sentences where the second sentence starts with one space. Consider the following text:","The sed script below will turn it into (Note the output it affects only the lines that start with a space):","Here's the script:","\nLess portable but more complex sed usage is transposing an XML table into a CSV:","First clear out all the extraneous whitespace:","If the current line is a blank  line, add a blank line to the hold space:","If there is an actual value in the field, strip the xml and add the value to the hold space:","If it is the end of a row (), then get the hold space, replace the newlines with '\",\"', add quotes to the beginning and end and then print the line:","If it is the beginning of a row, clear the hold space by adding a blank line:","Despite the inherent limitations, sed scripts exist for games such as sokoban, arkanoid, and an implementation of tetris."]}