{"name":"LISA","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Language_for_Instruction_Set_Architecture","description":["LISA is a language targeting the description of instruction set architecture. The aim is to capture all the information required to generate software tools (compiler, assembler, instruction set simulator, ...) and implementation hardware (in VHDL or Verilog) of a given processor core.","LISA is not focused on the modeling of other on-chip components around the processor core itself, such as peripherals, hardware accelerators, buses and memories; Other languages such as SystemC will be used for these.","While the scope of the language is quite large, many industrial cases are targeting a subset of its possibility. For instance LISA have been used to re-implement the hardware of certain processor core keeping the binary compatibility with the legacy version, as all software tools did already exist and legacy compiled software images could be executed on the newly created hardware.","Another focus case has been to focus only on generating ISS (instruction set simulator), most known case are the ARM Architecture ISSes.","The language has not been yet standardised by IEEE nor ISO and is currently owned by RWTH Aachen University, in Germany.","Initially developed at Institute for Integrated Signal Processing Systems (ISS) Aachen, belonging to RWTH Aachen University, in Germany.","The current official version from RWTH Aachen is LISA 2.0","The language is still in evolution to cover newly (and future) research on micro-computers, this includes Reconfigurable computing (in LISA 3.0) , multi-core, parallel programming, ...","One noticeable branch has been created for handling the modeling of peripherals (such as interrupt controller, timer, ...); Called LISA+. (see infocenter.arm.com and search for LISA+ Reference Language Manual)"]}