{"name":"PROIV","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/PROIV","description":["PROIV is a fourth-generation programming language (4GL), developed and sold by NorthgateArinso, part of the Northgate Information Solutions Group. It has an active community of around 2500 developers and end-users worldwide, ranging from consultants to large multinationals, finance institutions, tax authorities, retailers, engineering companies, media operators and software houses.","PROIV's usual application domain is database-centric business applications. PROIV has some similarities to languages such as ABAP, FOCUS and RPG.","PROIV programs consist of declarative\/non-procedural specifications that control the overall structure of the program and database access and that have an implicit sequence of execution (which PROIV programmers refer to as the timing cycle). Procedural subroutines can be added by the programmer; these are written in a 3GL-like language which PROIV calls \"Logic\".","Note that in PROIV programs are referred to as \"functions\", which can be confusing as it differs from the more usual use of that term in programming languages.","PROIV was developed by Sushil K. Garg working in Hawaii in 1976 on a General Automation System. In the early 1980s it was licensed to McDonnell Information Systems (MDIS).","MDIS converted PROIV to run on their Pick-based systems and this spin off was known as ALL (Application Language Liberator).","PROIV was ported to several different platforms by separate teams. Garg brought these ports together as one company, named Pro Computer Sciences (PCS) and headquartered in Laguna Hills, California. PCS was subsequently acquired by MDIS in 1988.","During the second half of the 1980s, a PROIV team entered in the 4GL Grand Prix contests of 1987, 1988 and 1990 and the product finished second on each occasion.","In 2000, McDonnell Information Systems changed its name to Northgate Information Solutions","PROIV supports a wide variety of operating systems by virtue of a write once, run anywhere virtual machine model similar to Java.","Server-side PROIV applications are highly portable with only a small degree of care on the part of the programmer. Server platform technology supported in current releases includes Linux, Microsoft Windows, Solaris, AIX, HP-UX and OpenVMS plus Oracle, DB2, SQL Server, PostgreSQL, Pervasive SQL, RMS, VSAM and C-ISAM. PROIV also runs on IBM iSeries and on IBM mainframes.","Once programmers are familiar with PROIV then, consistent with the nature of PROIV as a 4GL, productivity in PROIV's intended application domains is typically high and programmers can be effective even without extensive technical skills\/knowledge.","Applications implemented in PROIV are typically runtime-efficient and perform well. Scalability is also typically good with only a little care on the part of the programmer.","A key feature of PROIV is its independence of technologies and platforms. Some long-term users have passed through two or three decades of technological change using the same core functionality developed in PROIV. With each fresh release of PROIV, users have immediate access to the latest technologies without losing the development work they have invested in their existing PROIV applications. Applications designed for one platform are easily switched to another with minimal modification.","PROIV has little or no object-orientation and makes only a limited amount of procedural abstraction available to the programmer. PROIV has little support for analytical\/statistical\/mathematical functions; for example, it does not include basic trigonometric functions.","The PROIV-supplied \"GUI client\", which renders the rich-client UI for applications written in PROIV, is based around ActiveX technology and works only on Windows client platforms. Consequently, the programmers' development environments supplied with more-recent PROIV releases also work only on a Windows client platform.","PROIV has no inbuilt support for Interprocess Communication (IPC) mechanisms, although this can be added via the ability to extend the PROIV kernel in C.","The PROIV \"Bus and Task\" technology allowing \"service calls\" into a PROIV application from other systems is proprietary rather than based on an existing standard for RPC or some similar mechanism.","There is no formal\/rigorous definition of the syntax or semantics of PROIV available to programmers, which can make problem resolution difficult for the inexperienced."]}