{"name":"Haskell","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Haskell_(programming_language)","description":["Haskell (\/\u02c8h\u00e6sk\u0259l\/) is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing. It is named after logician Haskell Curry. In Haskell, \"a function is a first-class citizen\" of the programming language. As a functional programming language, the primary control construct is the function. The language is rooted in the observations of Haskell Curry and his intellectual descendants, that \"a proof is a program; the formula it proves is a type for the program\".","Following the release of Miranda by Research Software Ltd, in 1985, interest in lazy functional languages grew: by 1987, more than a dozen non-strict, purely functional programming languages existed. Of these, Miranda was the most widely used, but was not in the public domain. At the conference on Functional Programming Languages and Computer Architecture (FPCA '87) in Portland, Oregon, a meeting was held during which participants formed a strong consensus that a committee should be formed to define an open standard for such languages. The committee's purpose was to consolidate the existing functional languages into a common one that would serve as a basis for future research in functional-language design.","The first version of Haskell (\"Haskell 1.0\") was defined in 1990. The committee's efforts resulted in a series of language definitions (1.0, 1.1, 1.2, 1.3, 1.4).","In late 1997, the series culminated in Haskell 98, intended to specify a stable, minimal, portable version of the language and an accompanying standard library for teaching, and as a base for future extensions. The committee expressly welcomed the creation of extensions and variants of Haskell 98 via adding and incorporating experimental features.","In February 1999, the Haskell 98 language standard was originally published as \"The Haskell 98 Report\". In January 2003, a revised version was published as \"Haskell 98 Language and Libraries: The Revised Report\". The language continues to evolve rapidly, with the Glasgow Haskell Compiler (GHC) implementation representing the current de facto standard.","In early 2006, the process of defining a successor to the Haskell 98 standard, informally named Haskell Prime, was begun. This is an ongoing incremental process to revise the language definition, producing a new revision once per year. The first revision, named Haskell 2010, was announced in November 2009 and published in July 2010.","Haskell 2010 adds the Foreign Function Interface (FFI) to Haskell, allowing for bindings to other programming languages, fixes some syntax issues (changes in the formal grammar) and bans so-called \"n-plus-k-patterns\", that is, definitions of the form fact (n+1) = (n+1) * fact n are no longer allowed. It introduces the Language-Pragma-Syntax-Extension which allows for designating a Haskell source as Haskell 2010 or requiring certain Extensions to the Haskell Language. The names of the extensions introduced in Haskell 2010 are DoAndIfThenElse, HierarchicalModules, EmptyDataDeclarations, FixityResolution, ForeignFunctionInterface, LineCommentSyntax, PatternGuards, RelaxedDependencyAnalysis, LanguagePragma, NoNPlusKPatterns.","Haskell features lazy evaluation, pattern matching, list comprehension, type classes, and type polymorphism. It is a purely functional language, which means that in general, functions in Haskell do not have side effects. There is a distinct type for representing side effects, orthogonal to the type of functions. A pure function may return a side effect which is subsequently executed, modeling the impure functions of other languages.","Haskell has a strong, static type system based on Hindley\u2013Milner type inference. Haskell's principal innovation in this area is to add type classes, which were originally conceived as a principled way to add overloading to the language, but have since found many more uses.","The type which represents side effects is an example of a monad. Monads are a general framework which can model different kinds of computation, including error handling, nondeterminism, parsing, and software transactional memory. Monads are defined as ordinary datatypes, but Haskell provides some syntactic sugar for their use.","The language has an open, published specification, and multiple implementations exist.","There is an active community around the language, and more than 3600 third-party open-source libraries and tools are available in the online package repository Hackage.","The main implementation of Haskell, GHC, is both an interpreter and native-code compiler that runs on most platforms. GHC is noted for its high-performance implementation of concurrency and parallelism, and for having a rich type system incorporating recent innovations such as generalized algebraic data types and Type Families.","The following is a Hello world program written in Haskell (note that all but the last line can be omitted):","Here is the factorial function in Haskell, defined in a few different ways:","An efficient implementation of the Fibonacci numbers, as an infinite list, is this:","The \"Int\" type refers to a machine-sized integer (used as a list subscript with the\u00a0!! operator), while \"Integer\" is an arbitrary-precision integer. For example, the above code quickly computes \"fib 10000\" as a 2090-digit number.","All listed implementations are distributed under open source licenses. There are currently no proprietary Haskell implementations.","The following implementations comply fully, or very nearly, with the Haskell 98 standard.","Implementations below are not fully Haskell 98 compliant, and use a language that is a variant of Haskell:","Haskell is increasingly being used in commercial situations.Audrey Tang's Pugs is an implementation for the long-forthcoming Perl 6 language with an interpreter and compilers that proved useful after just a few months of its writing; similarly, GHC is often a testbed for advanced functional programming features and optimizations. Darcs is a revision control system written in Haskell, with several innovative features. Linspire GNU\/Linux chose Haskell for system tools development.Xmonad is a window manager for the X Window System, written entirely in Haskell.","Bluespec SystemVerilog is a language for semiconductor design that is an extension of Haskell. Additionally, Bluespec, Inc.'s tools are implemented in Haskell. Cryptol, a language and toolchain for developing and verifying cryptographic algorithms, is implemented in Haskell. Notably, the first formally verified microkernel, seL4 was verified using Haskell.","Concurrent Clean is a close relative of Haskell. Its biggest deviation from Haskell is in the use of uniqueness types instead of monads for I\/O and side-effects.","A series of languages inspired by Haskell, but with different type systems, have been developed, including:","JVM-based:","Other related languages include:","Haskell has served as a testbed for many new ideas in language design. There have been a wide number of Haskell variants produced, exploring new language ideas, including:","Jan-Willem Maessen, in 2002, and Simon Peyton Jones, in 2003, discussed problems associated with lazy evaluation while also acknowledging the theoretical motivation for it, in addition to purely practical considerations such as improved performance. They note that, in addition to adding some performance overhead, laziness makes it more difficult for programmers to reason about the performance of their code (particularly its space usage).","Bastiaan Heeren, Daan Leijen, and Arjan van IJzendoorn in 2003 also observed some stumbling blocks for Haskell learners: \"The subtle syntax and sophisticated type system of Haskell are a double edged sword \u2014 highly appreciated by experienced programmers but also a source of frustration among beginners, since the generality of Haskell often leads to cryptic error messages.\" To address these, researchers from Utrecht University developed an advanced interpreter called Helium which improved the user-friendliness of error messages by limiting the generality of some Haskell features, and in particular removing support for type classes.","Ben Lippmeier designed Disciple as a strict-by-default (lazy by explicit annotation) dialect of Haskell with a type-and-effect system, to address Haskell's difficulties in reasoning about lazy evaluation and in using traditional data structures such as mutable arrays. He argues (p.\u00a020) that \"destructive update furnishes the programmer with two important and powerful tools... a set of efficient array-like data structures for managing collections of objects, and ... the ability to broadcast a new value to all parts of a program with minimal burden on the programmer.\"","Robert Harper, using Standard ML to teach introductory programming, has given his reasons for not using Haskell. Among these are the difficulty of reasoning about resource usage with non-strict evaluation, that laziness complicates the definition of data types and inductive reasoning,and the \"inferiority\" of Haskell's class system compared to ML's module system.","The Haskell community meets regularly for research and development activities. The primary events are:","Since 2006, there have been a series of organized \"hackathons\", the Hac series, aimed at improving the programming language tools and libraries.","Since 2005, a growing number of Haskell User Groups have formed, in the United States, Canada, Australia, South America, Europe and Asia."]}