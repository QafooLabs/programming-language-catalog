{"name":"KRC","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Kent_Recursive_Calculator","description":["KRC (Kent Recursive Calculator) is a lazy functional language developed by David Turner in (or before?) 1981 based on SASL, with pattern matching, guards and ZF expressions (now more usually called list comprehensions). Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.","The direct successor to KRC is Miranda, which includes a polymorphic type discipline based on that of Milner's ML.","This article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the \"relicensing\" terms of the GFDL, version 1.3 or later.",""]}