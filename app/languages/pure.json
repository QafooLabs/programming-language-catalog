{"name":"Pure","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Pure_(programming_language)","description":["Pure is a dynamically typed, functional programming language based on term rewriting. It has facilities for user-defined operator syntax, macros, multiple-precision numbers, and compilation to native code through the LLVM. It is the successor to the Q programming language.","Pure comes with an interpreter and debugger, provides automatic memory management, and has powerful functional and symbolic programming capabilities as well as interface to C libraries (e.g. for numerics, low-level protocols, and other such tasks). At the same time, Pure is a \"small\" language designed from scratch; its interpreter is not large, and the library modules are written in Pure itself. The syntax of Pure resembles that of Miranda and Haskell, but it is a free-format language and thus uses explicit delimiters (rather than indentation) to indicate program structure.","The Pure language is a successor of the Q language created previously by the same author, Albert Gr\u00e4f at the University of Mainz in Germany. Compared to Q, it offers some important new features (in particular, local functions with lexical scoping, efficient vector and matrix support and the built-in C interface) and programs run much faster as they are JIT-compiled to native code on the fly. Pure is mostly aimed at mathematical applications and scientific computing currently, but its interactive interpreter environment, the C interface and the growing collection of addon modules make it suitable for a variety of other applications, such as artificial intelligence, symbolic computation, and real-time multimedia processing.","Pure plugins are available for the Gnumeric spreadsheet and Miller Puckette's Pure Data graphical multimedia software, which make it possible to extend these programs with functions written in the Pure language. Interfaces to GNU Octave, OpenCV, OpenGL, the GNU Scientific Library, FAUST, SuperCollider and liblo (for OSC) are also provided as library modules.","Pure is free software distributed (mostly) under the GNU Lesser General Public License version 3 (or later).","The Fibonacci numbers (naive version):","Better (tail-recursive and linear-time) version:","Compute the first 20 Fibonacci numbers:","An algorithm for the n queens problem which employs a list comprehension to organize the backtracking search:","While Pure uses eager evaluation by default, it also supports lazy data structures such as streams (lazy lists). For instance, here is a (suboptimal) trial division version of the sieve of Eratosthenes (attributed to David Turner) which computes the stream of all prime numbers:","Note the use of the & operator which turns the tail of the sieve into a thunk to delay its computation. The thunk is evaluated implicitly and then memoized (using call by need evaluation) when the corresponding part of the list is accessed, e.g.:","Pure has efficient support for vectors and matrices (similar to that provided by MATLAB and GNU Octave), including vector and matrix comprehensions. E.g., a Gaussian elimination algorithm with partial pivoting can be implemented as follows in Pure:","As a language based on term rewriting, Pure fully supports symbolic computation with expressions. Here is an example showing the use of local rewriting rules to expand and factor simple arithmetic expressions:","Calling C functions from Pure is very easy. E.g., the following imports the puts function from the C library and uses it to print the string \"Hello, world!\" on the terminal:"]}