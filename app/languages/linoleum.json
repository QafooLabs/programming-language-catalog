{"name":"Linoleum","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Linoleum_(programming_language)","description":["The L.in.oleum (often called Linoleum or simply Lino) is an unstructured, untyped, procedural programming language and a cross-platform assembler developed by Italian programmer Alessandro Ghignola beginning in 2001. The initials stand for Low-level INterfaced OverLanguage for Extremely Universal Machine-coding. The L.in.oleum programming language (hereafter referred to as Lino) is easier to learn than assembly languages. The Lino assembler is designed to assemble executable code for different central processing units (CPU) without needing changes to the source code.","Lino is intended for writing general-purpose programs, especially when portability, execution speed, and module size are critical to the application's success. These traits are especially important in fields of study that demand performance-intensive programs. Examples of such fields (in which Lino is actually being used) include fractals, mathematics (such as an implementation of fast Fourier transform), and ray tracing, to name a few.","This increased performance is achieved by Lino's nearly one-to-one ratio between Lino instructions and CPU instructions. That is, most instructions in Lino can be executed in one machine cycle, due to the way the language is set up. This gives a skilled programmer increased control over the computer, allowing for further optimization and tighter loops.","Although Lino is a relatively new language, several useful programs are already being written in it. These programs, most of which are available via the official Lino discussion forums or from Peterpaul Klein Haneveld's site, are in various stages of development. The list below is by no means comprehensive.","Note that many of the above links take you to forum threads where these programs are uploaded and discussed.","In addition to the above programs, there are many more programs written in Lino, as well as dozens of libraries written in Lino. Interest in this unique language is maintained by a small but dedicated community of programmers.","\"Low-level programming languages usually have no direct equivalent of the print statement found in many high-level programming languages. Thus, while a Hello world example can be done in Lino, it is too long to quote here.\"","Rather, Ghignola introduces Lino by an example of its stack and mathematical abilities. Here is an example of a full Lino program.","The preceding program stores the value 7 in variable A and the value 10 in variable B. The program pushes the variable B onto the stack and sets the variable C equal to 1. Then it multiplies C by 7 for 10 loops. In other words:","Finally the program pops B off the stack and (in its last line) shows the values of A, B, and C (which are CPU registers) on the screen.","The above example is a nontraditional introduction to a programming language. But the language itself is nontraditional. For example, it allows access to the CPU registers, which most high-level programming languages don't allow the programmer to access. Also, it comes with its own GUI, called the iGUI, although the programmer is not forced to use it.","Each Lino program comes bundled with a Run Time Module included in the .exe file, so there is no installation process needed. In other words, each Lino program is essentially self-contained, though it may need external files (i.e. data files) in order to perform correctly.","A Lino program does, however, need to be recompiled for each platform it's meant to run on\u2014but the source code doesn't need to be changed. Dutch university student Peterpaul Klein Haneveld is currently working to create a fully functional Lino compiler for Linux (see below for further details).","Free Lino compilers are available for these platforms:","A port to a new platform requires ...","The Lino compiler is written in Lino as of version 1.13. And as of version 1.2 (see below), the Lino compiler is itself a Lino library, which means it no longer needs to be ported. (For more details, read the Portability section above.) Lino libraries are stored as plain text files, just like programs.","Source code is stored in .txt files. Such files can easily be read and edited by any text editor, such as Notepad. Currently, you can compile a file by right-clicking on it and choosing the option \"Compile as LINOLEUM Source\" or by dragging the file over the compiler's icon.","The latest stable versions of the Lino compiler (Windows) are 1.13.11b and 1.2 (formerly version 1.14). The latest non-stable version is 2.0.","Lino 1.2 (available from the main website) features an improved visual compiler and several minor improvements to the language, enough to warrant a jump from 1.14 to 1.2. Many of the improvements are bug fixes and improvements to existing features. There are also new features, such as the ability to print monochrome bitmaps, and to insert \"jump alignment directives\", which allow programs (if optimized by skilled programmers) to run more efficiently.","The Lino 1.2 compiler can still compile as before, but it is now a visual compiler. This means that, unlike before, it can compile programs and view output from one place. The read-only (to prevent forking) code for the compiler (written in Lino as of this version) is available with the downloaded package (see the External links section below).","The \"Linux Linoleum Compiler\" is still in alpha. As of 2010, it is being developed by Dutch university student Peterpaul Klein Haneveld. Development is now inactive but may resume with the release of Lino 1.2. Additionally, Peterpaul has released the source code for the Linux run-time module, available on the main website, for those interested in continuing the project.","The first version of Linoleum 2 is available for download as of January of 2010. It features a new set of libraries, a smaller run-time module and a text display mode, along with a refreshed code syntax. However, this release isn't as stable as the 1.2, and it lacks the module extensions required for additional features, such as network and audio support."]}