{"name":"SISAL","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/SISAL","description":["SISAL (Streams and Iteration in a Single Assignment Language) is a general-purpose single assignment functional programming language with strict semantics, implicit parallelism, and efficient array handling. SISAL outputs a dataflow graph in Intermediary Form 1 (IF1). It was derived from VAL (Value-oriented Algorithmic Language, designed by Jack Dennis), and adds recursion and finite streams. It has a Pascal-like syntax and was designed to be a common high-level language for numerical programs on a variety of multiprocessors.","SISAL was defined in 1983 by James McGraw et al., at the University of Manchester, LLNL, Colorado State University and DEC. It was revised in 1985, and the first compiled implementation was made in 1986. Its performance is superior to C and rivals Fortran, according to some sources, combined with efficient and automatic parallelization.","SISAL's name came from grepping \"sal\" for \"Single Assignment Language\" from the Unix dictionary \/usr\/dict\/words.","Versions exist for the Cray X-MP, Y-MP, 2; Sequent, Encore Alliant, DEC VAX-11\/784, dataflow architectures, KSR1, Transputers and systolic arrays.","SISAL saw a brief resurgence in 2010 when a group of undergraduates at WPI investigated implementing a fine-grain parallelism backend for the SISAL language.","This article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the \"relicensing\" terms of the GFDL, version 1.3 or later."]}