{"name":"Coq","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Coq","description":["In computer science, Coq is an interactive theorem prover. It allows the expression of mathematical assertions, mechanically checks proofs of these assertions, helps to find formal proofs, and extracts a certified program from the constructive proof of its formal specification. Coq works within the theory of the calculus of inductive constructions, a derivative of the calculus of constructions. Coq is not an automated theorem prover but includes automatic theorem proving tactics and various decision procedures.","Coq implements a dependently typed functional programming language.","It is developed in France, in the PI.R2 team of the PPS laboratory, jointly operated by INRIA, \u00c9cole Polytechnique, Paris-Sud 11 University, Paris Diderot University and CNRS. There was also formerly a group at \u00c9cole Normale Sup\u00e9rieure de Lyon. The project manager of Coq is Hugo Herbelin. Coq is implemented in OCaml.","The word coq means \"cock\" or \"rooster\" in French, and stems from a tradition of naming French research development tools with animal names. It is also a reference to Thierry Coquand, who developed the aforementioned calculus of constructions along with G\u00e9rard Huet. Also, at first it was simply called Coc, the acronym of calculus of construction.","Georges Gonthier (of Microsoft Research, in Cambridge, England) and Benjamin Werner (of INRIA) used Coq to create a surveyable proof of the four color theorem, which was completed in September 2004.","Based on this work, a significant extension to Coq was developed called Ssreflect (which stands for \"small scale reflection\"). Despite the name, most of the new features added to Coq by Ssreflect are general purpose features, useful not merely for the computational reflection style of proof. These include:","Ssreflect 1.2 is freely available dual-licensed under the open source CeCill-B or Cecill-2.0 license, and is compatible with Coq 8.2pl1."]}