{"name":"RTL\/2","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/RTL\/2","description":["RTL\/2 was a high-level programming language developed at Imperial Chemical Industries Ltd by J.G.P. Barnes. It was originally used internally within ICI but was distributed by SPL International in 1974 It was designed for use in real-time computing (hence the acronym RTL = real-time language). Based on concepts from Algol 68, it was intended to be a small, simple language. RTL\/2 was standardised in 1980 by the British Standards Institution.","RTL\/2 was a weakly typed language with separate compilation. The compilation units contained one or more items known as \"bricks\", i.e.:","A procedure brick was a procedure, which may or may not return a (scalar) value, have (scalar) parameters, or have local (scalar) variables. The entry mechanism and implementation of local variables was re-entrant. Non-scalar data could only be accessed via reference (so-called REF variables were considered scalar).","A data brick was a named static collection of scalars, arrays and records. Programmers had to implement memory management themselves (there was no heap or garbage collection).","A stack brick was an area of storage reserved for running all the procedures of a single process and contained the call stack, local variables and other housekeeping items. The extent to which stack bricks were actually used varied depending upon the host environment in which RTL\/2 programs actually ran.","Access to the host environment of an RTL\/2 program was provided via special procedure and data bricks called SVC procedures and SVC data. These were accessible in RTL\/2 but implemented in some other language in the host environment.","TITLE Hello World;","LET NL=10;","EXT PROC(REF ARRAY BYTE) TWRT;","ENT PROC INT RRJOB();","ENDPROC;","RTL\/2 compiles to assembly lanaguage and provides the CODE statement to permit assembly language to be inserted directly into RTL\/2 programs. This is only available when compiled with a systems programming option (CN:F)","The Code statement takes two operands: the number of bytes used by the code insert and the number of bytes of stack used.","Within code statements two trip characters are used to access RTL\/2 variables. These vary from operating system to operating system. On PDP-11 and VAX\/VMS the trip characters are '*' and '\/'","While the specifics varied by operating system the following is an example of a code insert on VAX\/VMS:","This code insert moves the value of a variable passed into the RTL\/2 procedure into a variable called COUNTER in a data brick called MYDATA.","","Barnes, J.G.P., \"RTL\/2 design and philosophy\", Heyden, 1976; 164pp","SPL published a range of documentation for RTL\/2. Each of these documents had a reference number assigned. The following is an incomplete list."]}