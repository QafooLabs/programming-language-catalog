{"name":"Go!","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Go!_(programming_language)","description":["Go! is an agent-based programming language in the tradition of logic-based programming languages like Prolog. It was introduced in a 2003 paper by Francis McCabe and Keith Clark.","In November 2009, Google released a similarly named Go programming language (with no exclamation point). McCabe asked Google to change the name of their language and accused the company of \"steam-rolling over us\". The issue received attention among technology news websites, with some of them characterizing Go! as \"obscure\".","The authors of Go! describe it as \"a multi-paradigm programming language that is oriented to the needs of programming secure, production quality, agent based applications. It is multi-threaded, strongly typed and higher order (in the functional programming sense). It has relation, function and action procedure definitions. Threads execute action procedures, calling functions and querying relations as need be. Threads in different agents communicate and coordinate using asynchronous messages. Threads within the same agent can also use shared dynamic relations acting as Linda-style tuple stores.\"","The authors also propose that the language is suitable for representing ontologies due to its integration of logic, functional and imperative styles of programming.","As a deliberate design choice to reduce complexity, Go! does not support inheritance.","The following example illustrates the \"ontology-oriented\" type and declarations style of Go!:","The ::= rule defines a new algebraic data type, a data type with only data constructors.","The ","The $= type rule indicates that there is also a theory label, with the functor person, for a theory that defines the characteristic properties of the person type - implements the person interface - in terms of four given parameters of types string, day, Gender, and string.",""]}