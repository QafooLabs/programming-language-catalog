{"name":"Io","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Io_(programming_language)","description":["Io is a pure object-oriented programming language inspired by Smalltalk, Self, Lua, Lisp, Act1, and NewtonScript. Io has a prototype-based object model similar to the ones in Self and NewtonScript, eliminating the distinction between instance and class. Like Smalltalk, everything is an object and it uses dynamic typing. Like Lisp, programs are just data trees. Io uses actors for concurrency.","Remarkable features of Io are its minimal size and openness to using external code resources.[citation needed] Io is executed by a small, portable virtual machine.","The language was created by Steve Dekorte around March 7, 2002, after trying to help a friend, Dru Nelson, with his language, Cel. He found out that he really didn't know much about how languages worked, and set out to write a tiny language to understand the problems better.","Io's goal is to explore conceptual unification and dynamic languages, so the tradeoffs tend to favor simplicity and flexibility over performance.","In its simplest form, it is composed of a single identifier:","Assuming the above doStuff is a method, it is being called with zero arguments and as a result, explicit parentheses are not required.","If doStuff had arguments, it would look like this:","Io is a message passing language, and since everything in Io is a message (excluding comments), each message is sent to a receiver. The above example demonstrates this well, but not fully. To describe this point better, let's look at the next example:","The above example demonstrates message passing in Io; the \"version\" message is sent to the \"System\" object.","Operators are a special case where the syntax is not as cut-and-dried as the above examples. The Io parser intercepts a set of operators defined by the interpreter, and translates them to method calls. For example, the following:","translates to:","As you can see, there is also a little bit of operator precedence happening here, and the precedence levels are the same as with the C precedence levels.","Operators were also turned into method calls. In fact, all operators in Io are methods; the fact that they do not require explicit parentheses is a convenience.","In Io there are two ways of creating anonymous functions: methods and blocks. Between them, they are almost identical except for scope. While blocks have lexical scope, methods have dynamic scope.","Both method and block are higher-order functions.","The ubiquitous Hello world program:","New objects are created by cloning objects. In Io specifically, a new, empty object is created and only the differences between it and its parent are stored within the new object; this behavior is known as differential inheritance. An example of this behavior is shown:","A simple non-recursive factorial function, in Io:","Because assignment of res * i to res is the last action taken, the function implicitly returns the result and so an explicit return expression is not needed. The above demonstrates the usage of ranges, and doesn't use a for() loop, which would be faster."]}