{"name":"BitC","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/BitC","description":["BitC is a systems programming language developed by researchers at the Johns Hopkins University and The EROS Group, LLC as part of the Coyotos project. It aims to support formal program verification.","The language has two primary objectives:","The goals for the BitC language were set out in 2004 in Towards a Verified, General-Purpose Operating System Kernel (html, pdf) presented at the 2004 NICTA OS Verification Workshop.","Some details of the origins and early evolution of the language can be found in The Origins of the BitC Programming Language (html, pdf). An early compiler for BitC, known as BitCC, was first released in an alpha form (v. 0.10.1) on June 17, 2006, and in the same year Shapiro left Johns Hopkins to form The EROS Group, LLC, and the BitC project became a joint effort between the two organizations.","At the end of 2008 the specification for the first released version of the language and its compiler converged towards its final form, and the prototype compiler was demonstrated to have favorable performance on microbenchmarks.","BitC combines the concepts of higher-order functional programming languages like ML and Haskell with the close hardware interaction of low-level programming languages like C. The current language syntax is derived from the syntax of Lisp, but this is expected to be replaced as the language comes to its first release.","From the standpoint of programming language evolution, BitC's most important innovation is the first sound and complete type inference algorithm that handles generalized state and unboxing. With the recent (not yet implemented) addition of effect typing, BitC presents an interesting middle position between purely functional and traditionally state-oriented languages.","From the perspective of systems programmers, BitC may be more interesting for the fact that the non-optimizing research prototype compiler is delivering performance on early benchmarks that falls within 1% to 1.5% of C on comparable code.[clarification needed]","In April 2009, Shapiro - driving force behind both BitC and Coyotos - announced that he had accepted a position at Microsoft to work on the Midori project, and that after August 2009 he would not be working further on BitC. However, in March 2010 he announced that he would leave Microsoft and continue to work on BitC. Finally, in March 2012 he announced that he had permanently ceased work on BitC, saying that the language had fundamental design flaws and would not work in its current form."]}