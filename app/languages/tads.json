{"name":"TADS","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/TADS","description":["Text Adventure Development System (TADS) is a prototype-based domain-specific programming language and set of standard libraries for creating interactive fiction (IF) games.","The original TADS 1 was released by High Energy Software as shareware in the late 1980s, and was followed by TADS 2 not long after. In the early 1990s, TADS established itself as the number one development tool for interactive fiction, in place of simpler systems like AGT (Adventure Game Toolkit).[citation needed] In the late 1990s, it was joined by Inform as the most popular interactive fiction development language.","TADS 2 syntax is based on C, with bits of Pascal. TADS 2 has been maintained and updated at regular intervals by its creator, Michael J. Roberts, even after it became freeware in July 1996. Graham Nelson, creator of Inform, describes Inform and TADS as the \"only two systems... widely used\" in the last half of the 1990s, and TADS has been called \"The second most commonly used IF programming language today\". Multimedia TADS, introduced in 1998, allows games to display graphics, animation and play sounds, if the platform supports it.","In 2006, TADS received a major overhaul with the release of TADS 3, which is a complete rewrite of the TADS engine, only retaining the platform-dependent code to ease porting. TADS 3 uses a language with a syntax that resembles C++ and Java. It has many new features, such as efficient dynamic objects (with automatic garbage collection), structured exceptions, native UTF-8 strings, and many useful function classes.","The TADS 3 compiler and interpreter have been ported to the DOS, Macintosh and Unix platforms. Several TADS 3 games have been released.","Games written in TADS are compiled to a platform-independent format that can be played on any computer for which a suitable virtual machine (VM) exists. Such virtual machines exist for several platforms, and in this respect, TADS closely follows the example of the original Infocom Z-machine, as well as modern languages such as Java and C#.","Whereas the TADS 1 and 2 VMs had to parse the commands entered by the player, before sending the results on to the game, TADS 3 employs a more general-purpose virtual machine, where the command-parsing is done by the game code itself, akin to Inform. The rationale for this is that it is easier to customize the parser."]}