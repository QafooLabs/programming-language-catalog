{"name":"G\u00f6del","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/G%C3%B6del_(programming_language)","description":["G\u00f6del is a declarative, general-purpose programming language that adheres to the logic programming paradigm. It is a strongly typed language, the type system being based on many-sorted logic with parametric polymorphism. It is named after logician Kurt G\u00f6del.","G\u00f6del has a module system, and it supports arbitrary precision integers, arbitrary precision rationals, and also floating-point numbers. It can solve constraints over finite domains of integers and also linear rational constraints. It supports processing of finite sets. It also has a flexible computation rule and a pruning operator which generalises the commit of the concurrent logic programming languages.","G\u00f6del's meta-logical facilities provide support for meta-programs that do analysis, transformation, compilation, verification, and debugging, among other tasks.","The following G\u00f6del module is a specification of the greatest common divisor (GCD) of two numbers. It is intended to demonstrate the declarative nature of G\u00f6del, not to be particularly efficient. The CommonDivisor predicate says that if i and j are not zero, then d is a common divisor of i and j if it lies between 1 and the smaller of i and j and divides both i and j exactly. The Gcd predicate says that d is a greatest common divisor of i and j if it is a common divisor of i and j, and there is no e that is also a common divisor of i and j and is greater than d."]}