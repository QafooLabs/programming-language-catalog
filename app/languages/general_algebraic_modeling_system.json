{"name":"GAMS","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/General_Algebraic_Modeling_System","description":["The General Algebraic Modeling System (GAMS) is a high-level modeling system for mathematical optimization. GAMS is designed for modeling and solving linear, nonlinear, and mixed-integer optimization problems. The system is tailored for complex, large-scale modeling applications and allows the user to build large maintainable models that can be adapted to new situations. The system is available for use on various computer platforms. Models are portable from one platform to another.","GAMS was the first algebraic modeling language (AML) and is formally similar to commonly used fourth-generation programming languages.[citation needed] GAMS contains an integrated development environment (IDE) and is connected to a group of third-party optimization solvers. Among these solvers are BARON, COIN solvers, CONOPT, CPLEX, DICOPT, GUROBI, MOSEK, SNOPT, and XPRESS.","GAMS facilitates the users to implement a sort of hybrid algorithms combining different solvers in a seamless way. Models are described in concise algebraic statements which are easy to read, both for humans and machines. GAMS is among the most popular input formats for the NEOS Server for Optimization. Although initially designed for applications related to economics and management science, it has a large community of users from various backgrounds of engineering and science.","Initial research and development of GAMS was funded by the International Bank for Reconstruction and Development, usually referred to as The World Bank, through the Bank\u2019s Research Committee (RPO 671-58, RPO 673-06) and carried out at the Development Research Center in Washington, D.C. Since 1987, R&D has been funded by GAMS Development Corporation.","The system was developed in close cooperation between mathematical economists who are an important group of GAMS users. The synergy between economics, computer science and operations research was the most important factor of success mail in the development of the system.[citation needed]Mathematical programming and economics theory are closely intertwined. The Nobel Prize in Economics awarded to Leonid Kantorovich and Tjalling Koopmans in 1975 for their \u201ccontribution to the theory of optimal allocation of resources\u201d was really a prize in mathematical programming. Other Nobel laureates like Kenneth Arrow in 1972, Wassily Leontief in 1973, and Harry Markowitz in 1990 are well known names in math programming. Another early example of this synergy is the use of LP in refining operations, which was started by Alan Manne, an economist, with his book on Scheduling of Petroleum Refinery Operations in 1956.","The origins of linear programming algorithms stem from George Dantzig\u2019s early work in the 1940s and 1950s. Computing technology and algorithmic theory had developed at a rapid pace. Thirty years later, it was possible to solve problems of practical size and complexity that allowed the user to test the economic theory on real life problems. The World Bank's research agenda in the 1970s and 1980s created the perfect environment to bring different disciplines together in order to apply mathematical programming to research and operational questions in Economic Development.[citation needed]","The focus and technical constraints of the development of modeling systems have changed in the last 30 years. The dominant constraints in the first phase were the computational limits of algorithms. Problem representation had to abide by algorithmic convenience, centralized expert groups managed large, expensive and long lasting projects and end users were effectively left out. The second phase focused the model. This volume is about languages and systems supporting this stage. Applications are limited by modeling skill, project groups are much smaller and decentralized, the computational cost are low and the users are involved in the design of the application. Applications are designed to be independent of computing platforms and frequently operate in a client-server environment. The next step was to ameliorate the application as well as the optimization model. These are just one of many analytic tools that help making better decisions. User interfaces are built with off-the-shelf components and frequently change to adjust to evolving environments and new computing technologies. Currently the UI is only available for Windows.","The driving force behind the development of GAMS were the users of mathematical programming who believed in optimization as a powerful and elegant framework for solving real life problems in science and engineering. At the same time, these users were frustrated by high costs, skill requirements, and an overall low reliability of applying optimization tools. Most of the system's initiatives and support for new development arose in response to problems in the fields of economics, finance, and chemical engineering, since these disciplines view and understand the world as a mathematical program.","GAMS\u2019s impetus for development arose from the frustrating experience of a large economic modeling group at the World Bank. In hindsight, one may call it a historic accident that in the 1970s mathematical economists and statisticians were assembled to address problems of development. They used the best techniques available at that time to solve multi sectoral economy-wide models and large simulation and optimization models in agriculture, steel, fertilizer, power, water use, and other sectors. Although the group produced impressive research, initial success was difficult to reproduce outside their well functioning research environment. The existing techniques to construct, manipulate, and solve such models required several manual, time-consuming, and error-prone translations into different, problem-specific representations required by each solution method. During seminar presentations, modelers had to defend the existing versions of their models, sometimes quite irrationally, because time and money did not allow. Their models just could not be moved to other environments, because special programming knowledge was needed, and data formats and solution methods were not portable.","The idea of an algebraic approach to represent, manipulate, and solve large scale mathematical models fused old and new paradigms into a consistent and computationally tractable system. Using matrix generators for linear programs revealed the importance of naming rows and columns in a consistent manner. The connection to the emerging relational data model became evident. Experience using traditional programming languages to manage those name spaces naturally lead one to think in terms of sets and tuples, and this led to the relational data model.","Combining multi-dimensional algebraic notation with the relational data model was the obvious answer. Compiler writing techniques were by now widespread, and languages like GAMS could be implemented relatively quickly. However, translating this rigorous mathematical representation into the algorithm specific format required the computation of partial derivatives on very large systems. In the 1970s, TRW developed a system called PROSE that took the ideas of chemical engineers to compute point derivatives that were exact derivatives at a given point, and to embed them in a consistent, Fortran-style calculus modeling language. The resulting system allowed the user to use automatically generated exact first and second order derivatives. This was a pioneering system and an important demonstration of a concept. However, PROSE had a number of shortcomings: it could not handle large systems, problem representation was tied to an array-type data structure that required address calculations, and the system did not provide access to state-of-the art solution methods. From linear programming, GAMS learned that exploitation of sparsity was the key to solve large problems. Thus, the final piece of the puzzle was the use of sparse data structures.","A transportation problem from George Dantzig is used to provide a sample GAMS model. This model is part of the model library which contains many more complete GAMS models. This problem finds a least cost shipping schedule that meets requirements at markets and supplies at factories.","Dantzig, G B, Chapter 3.3. In Linear Programming and Extensions. Princeton University Press, Princeton, New Jersey, 1963.","The Mathematical Programming System for General Equilibrium analysis (MPSGE) is a language used for formulating and solving Arrow\u2013Debreu economic equilibrium models and exists as a subsystem within GAMS."]}