{"name":"Janus","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Janus_(programming_language)","description":["The name Janus refers to at least two computer programming languages or partial descriptions of possible computer programming languages:","Janus is a computer programming language partially described by K. Kahn and Vijay A. Saraswat in \"Actors as a special case of concurrent constraint (logic) programming\", in SIGPLAN Notices, October 1990. Janus is a concurrent constraint language without backtracking.","Janus models concurrency through the use of bag channels. Code that needs to send a message to a process does so by constraining a bag to be the union of another bag and the singleton bag of the message. The other bag is then available to be constrained for sending subsequent messages.","The process receives the message by matching the bag to a pattern that says it is the union of some singleton and some other bag. The logic of the bag channels produces a property shared by the actor model, namely that the order of arrival of the messages is not guaranteed. However, unlike actors in the actor model, processes in Janus can pass around their \"mailboxes\" so to speak, in the form of bags, and can hold more than one. This ability to pass mailboxes around and hold more than one is inherited in computer programming language ToonTalk, which is influenced by Janus.","Janus, the programming language, is named after Janus, the two-faced Roman god, because every logical variable in Janus has as its two \"faces\", two aspects that can be passed as arguments. These are called the asker and the teller. These represent, respectively, the right to ask the value of the variable (or some characteristic of the value) and the right to tell the value (or to tell some constraint on what the value can be). The asker and teller aspects can be passed around as arguments independently of each other. Neither right implies the other right. The syntax of the language prevents copying a teller or exercising it more than once. Logical contradiction is statically prevented, according to Kahn and Saraswat.","Janus is also the name of a time-reversible programming language written at Caltech in 1982."]}