{"name":"Cython","aliases":[],"wiki":"http:\/\/en.wikipedia.org\/wiki\/Cython","description":["Cython is a programming language to simplify writing C and C++ extension modules for the CPython Python runtime. Strictly speaking, Cython syntax is a superset of Python syntax additionally supporting:","Cython compiles to C or C++ code rather than Python, and the result is used as a Python Extension Module or as a stand-alone application embedding the CPython runtime.","Cython files have a .pyx extension. At its most basic, Cython code looks exactly like Python code. For example:","However, whereas standard Python is dynamically typed, in Cython, types can optionally be provided, allowing for improved performance, allowing loops to be converted into C loops where possible. For example:","Cython is a derivative of the Pyrex language, and supports more features and optimizations than Pyrex.","Cython was forked from Pyrex in 2007 by developers of the Sage computer algebra package, because they were unhappy with Pyrex's limitations and could not get patches accepted by Pyrex's maintainer Greg Ewing, who envisioned a much smaller scope for his tool than the Sage developers had in mind. They then forked Pyrex as SageX. When they found people were downloading Sage just to get SageX, and developers of other packages (including Stefan Behnel, who maintains LXML) were also maintaining forks of Pyrex, SageX was split off the Sage project and merged with cython-lxml to become Cython.","The special advantage of this seamless Python\/C intermix approach is that existing Python code can be tuned to almost the speed of C by just adding a few static type declarations and by making some adaptations in critical loops - without requiring complicated interface code.The coding speed and the readability of the code remains very Pythonic. Due to reduced overhead in control structures (especially loops), optimistic optimisations and (limited) type inference, Cython compiled Python code usually executes faster than in the CPython 2.6.x interpreter, although the absolute improvements largely depend on the code. With type declarations, the typical speed-up for numerical\/array computations is about 100x-1000x. In comparison, the typical speed-up with Psyco (Python JIT compiler) is about 4x-100x.","Cython has been optimised for low call overhead, so a Python call into external C\/C++ code through a Cython wrapper is usually faster than with most other wrapping solutions.","Cython is written in Python and works on Windows, Linux, and Mac OS X.","Cython is particularly popular among scientific users of Python, where it has \"the perfect audience\" according to Python developer Guido van Rossum. Of particular note:","Cython's domain is not limited to just numerical computing. For example, the lxml XML toolkit is written mostly in Cython, and Cython is used to provide Pythonic bindings for many C and C++ libraries ranging from the graphics library OpenGL to the messaging library ZeroMQ."]}